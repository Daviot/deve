import { Hooks } from './../../code/model/hooks';
import { Plugin, PluginFramework } from '../../code/model/plugin';
import { minify } from 'html-minifier';

export default class HtmlMinifierPlugin extends Plugin {
    constructor(wyvr: PluginFramework) {
        super(wyvr);
        const config = wyvr.config.get('html-minifier');
        wyvr.hooks.set('builder:generate#after', (data: any)=> {
            if(config.generateRawHtml) {
                const rawPath = `${data.destination.replace('.html', '')}.raw.html`;
                wyvr.logger.debug(this, `write raw version to "${rawPath}"`);
                wyvr.fs.write(rawPath, data.generated);
            }
            data.generated = this.minify(data.generated);
            return data;
        });
    }

    minify(source: string) {
        const minsrc = <string>minify(source, {
            collapseBooleanAttributes: true,
            collapseInlineTagWhitespace: true,
            collapseWhitespace: true,
            conservativeCollapse: true,
            decodeEntities: true,
            html5: true,
            includeAutoGeneratedTags: true,
            keepClosingSlash: true,
            removeAttributeQuotes: true,
            removeComments: true,
            removeRedundantAttributes: true,
            removeScriptTypeAttributes: true,
            removeStyleLinkTypeAttributes: true,
            useShortDoctype: true
        });
        //console.log(source.length, minsrc.length, Math.round(minsrc.length/source.length*100));
        return minsrc;
    }
}
